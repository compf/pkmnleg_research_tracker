@using ResearchTaskLib;
@rendermode InteractiveServer
<style>
    .catchWithoutActuallyCatching{
        text-decoration:underline
    }
</style>
@code{
    string getDescriptionClass()
    {
        if(task.Type.CatchWithoutActuallyCatching(entry))
        {
            return "catchWithoutActuallyCatching";
        }
        return null;;
    }
}
@if(task.Points>10){
    <span style="color:red">&gt;&gt;&nbsp;</span>
}
else{
    <span>&nbsp;&nbsp;</span>
}
<span class="@getDescriptionClass()">@task.Type.Description</span>


<span></span>
<input type="number"  @bind="AmountDone"  />
<span></span>
@foreach (var goal in task.Goals)
{
   @if(!IsAchieved(goal,AmountDone))
{
    <span>@goal</span>
}
else
{
    <span style="color:red">@goal</span>
   
}
    <span style="margin-left:5px"></span>
}
@code{
[Parameter]

    public ResearchTaskEntry task{get;set;}
    [Parameter]
    public PokedexEntry entry{get;set;}
    public bool IsAchieved(int goal, int amountDone){
        return amountDone>=goal;
    }
    [Parameter]
    public int AmountDone{
        get{
            return task.AmountDone;
        }
        set{
            task.AmountDone = value;
        }
    }

}

